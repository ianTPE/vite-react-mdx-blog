import fs from 'fs';
import path from 'path';

async function generateArticlesData() {
  const articlesDir = path.resolve('src/content/articles');
  // 元数据文件直接位于 articles 目录下，而不是作为子目录
  const metadataPath = path.join(articlesDir, 'metadata.ts');
  
  // 檢查元數據文件是否存在
  if (!fs.existsSync(metadataPath)) {
    console.error('錯誤: 找不到元數據文件');
    process.exit(1);
  }
  
  // 獲取所有文章目錄
  const articleFolders = fs.readdirSync(articlesDir, { withFileTypes: true })
    .filter(dirent => dirent.isDirectory())
    .map(dirent => dirent.name);
  
  // 構建文章數據
  const articles = articleFolders.map(folder => {
    // 檢查是否有自定義 OG 圖像
    const hasCustomOgImage = fs.existsSync(path.join(articlesDir, folder, 'og-image.png')) || 
                             fs.existsSync(path.join(articlesDir, folder, 'og-image.jpg'));
    
    return {
      slug: folder,
      hasCustomOgImage
    };
  });
  
  // 生成文章數據文件內容
  let content = `// This file is automatically generated
// Generated on: ${new Date().toISOString()}

// Article data
export const articles = [\n`;

  // 添加每篇文章的數據
  articles.forEach((article, index) => {
    content += `  { 
    slug: "${article.slug}", 
    hasCustomOgImage: ${article.hasCustomOgImage} 
  }${index < articles.length - 1 ? ',' : ''}\n`;
  });

  content += `];

// Helper functions
export function getValidSlugs() {
  return articles.map(a => a.slug);
}

export function getArticleBySlug(slug) {
  return articles.find(a => a.slug === slug);
}`;
  
  // 寫入 lib 目錄
  fs.writeFileSync('src/lib/articles.ts', content);
  console.log(`✅ 已生成 src/lib/articles.ts (找到 ${articles.length} 篇文章)`);
}

generateArticlesData().catch(console.error);
